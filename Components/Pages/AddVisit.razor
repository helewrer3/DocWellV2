@page "/add-visit"
@using DocWellV2.Services
@using DocWellV2.Data.Models
@inject VisitService VisitService;
@inject PatientService PatientService;
@rendermode InteractiveServer

<PageTitle>Add Visit</PageTitle>
<h1>Add Patient Visit</h1>

@if (DisplayAlert) {
    <div class="alert @AlertClass fade-in" role="alert">@AlertMessage</div>
}

<EditForm OnValidSubmit="@HandleSubmit" Model="@_newVisit" FormName="AddVisitForm">
    <DataAnnotationsValidator />

    <div class="form-row">
        <div class="form-group col-md-4">
            <label for="NameInput">Patient Name:</label>
            <InputText id="NameInput" @bind-Value="@_newVisit.PatientName" @oninput="@FilterPatients" placeholder="Type to search..."></InputText>
            @if (_filteredPatients.Any())
            {
                <ul class="dropdown-menu show" role="menu" @onclick:stopPropagation>
                    @foreach (var option in _filteredPatients)
                    {
                        <li><button class="dropdown-item" type="button" @onclick="() => SelectPatient(option)">@option.Name</button></li>
                    }
                </ul>
            }
            <a href="@($"/add-patient")" class="mx-3 link-warning link-offset-2 link-underline-opacity-0 link-underline-opacity-100-hover">or add patient</a>
        </div>
        
        
    </div>

    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Add Patient</button>
    </div>
</EditForm>

@code {
    private string? AlertMessage { get; set; }
    private string? AlertClass { get; set; }
    private bool DisplayAlert { get; set; }

    private readonly NewVisit _newVisit = new NewVisit();
    private List<Patient> _filteredPatients = [];

    private void FilterPatients(ChangeEventArgs changeEventArgs)
    {
        var patientNameQuery = (string?)changeEventArgs.Value ?? string.Empty;
        var patients = new List<Patient>();
        if (patientNameQuery != string.Empty) patients = PatientService.GetPatientsByName(patientNameQuery);
        _filteredPatients = patients;
    }

    private void SelectPatient(Patient patient)
    {
        _newVisit.PatientName = patient.Name;
        _filteredPatients = [];
    }
    
    private void HandleSubmit(EditContext editContext)
    {
        DisplayAlert = true;
        try
        {
            // var newVisit = (Visit)editContext.Model;
            // newVisit.CreatedDate = DateTime.UtcNow;
            // VisitService.AddVisit(newVisit);
            AlertClass = "alert-success";
            AlertMessage = "Patient record added successfully.";
        }
        catch (Exception e)
        {
            AlertClass = "alert-danger";
            AlertMessage = e.Message;
            throw;
        }
    }
    
    public class NewVisit
    {
        public string PatientName = string.Empty;
    }
}