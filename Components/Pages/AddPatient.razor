@page "/add-patient"
@using DocWellV2.Services
@using DocWellV2.Data.Models
@inject PatientService PatientService;
@rendermode InteractiveServer

<PageTitle>Add Patient</PageTitle>
<h1>Add Patient</h1>

@if (DisplayAlert) {
    <div class="alert @AlertClass fade-in" role="alert">@AlertMessage</div>
}

<EditForm OnValidSubmit="@HandleSubmit" Model="@_patient" FormName="AddPatientForm">
    <DataAnnotationsValidator />

    <div class="form-row">
        <div class="form-group col-md-4">
            <label for="NameInput">Name:</label>
            <InputText id="NameInput" class="form-control" @bind-Value="@_patient.Name" placeholder="Enter patient's name" />
        </div>
        <div class="form-group col-md-4">
            <label for="AgeInput">Age:</label>
            <InputNumber id="AgeInput" class="form-control" @bind-Value="@_patient.Age" placeholder="Enter patient's age" />
        </div>
        <div class="form-group col-md-4">
            <label for="WeightInput">Weight:</label>
            <InputNumber id="WeightInput" class="form-control" @bind-Value="@_patient.Weight" placeholder="Enter patient's weight" />
        </div>
    </div>
    
    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Add Patient</button>
    </div>
</EditForm>


@code {
    private string? AlertMessage { get; set; }
    private string? AlertClass { get; set; }
    private bool DisplayAlert { get; set; }  
    
    readonly Patient _patient = new Patient();

    private void HandleSubmit(EditContext editContext)
    {
        DisplayAlert = true;
        try
        {
            var newPatient = (Patient)editContext.Model;
            newPatient.CreatedDate = DateTime.UtcNow;
            PatientService.AddPatient(_patient);
            AlertClass = "alert-success";
            AlertMessage = "Patient record added successfully.";
        }
        catch (Exception e)
        {
            AlertClass = "alert-danger";
            AlertMessage = e.Message;
            throw;
        }
    }
}